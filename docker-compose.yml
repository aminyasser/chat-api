version: '3'

services:
  db:
    image: mysql:5.7
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chat_api
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"

  rails-app: 
    build:
      context: ./rails-service
      # dockerfile: Dockerfile
    command: bash -c "sh wait-for-it.sh elasticsearch:9200 && sh entrypoint.sh"
    depends_on:     
      - db
      - elasticsearch
    ports: 
      - "3000:3000"
    volumes:
      - ./rails-service:/rails-app
      - gem_cache:/usr/local/bundle/ge  ms
    env_file: ./rails-service/.env
    environment:
      RAILS_ENV: development
      ELASTIC_SEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_URL: http://elasticsearch:9200

  
  redis:
    image: redis:5-alpine
    command: redis-server
    restart: always
    ports:
      - 6379:6379
    volumes:
      - 'redis:/data'
 
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672   # for sender and consumer connections
      - 15672:15672 # for serve RabbitMQ GUI
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping", "-q"]
      interval: 10s
      timeout: 5s
      retries: 5


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata1:/usr/share/elasticsearch/data
   

  golang-app:
    build: ./golang-service
    restart: always
    # command: bash -c "sh wait-for-it.sh rabbitmq:15672"
    depends_on:
      - db
      - redis
      - rabbitmq
    volumes:
      - .:/golang-app
    ports:
      - "8080:8080"   

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always  
    depends_on:
      - rails-app
      - golang-app
      - db
      - redis
      - rabbitmq  
    ports:
      - "8000:8000"
   

volumes:
  mysql-data:
  gem_cache:
  redis:
  esdata1: